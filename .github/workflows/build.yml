name: Build

on:
  push:

env:
  IMG_REGISTRY: ghcr.io/slyngdk/
  IMG_NAME_CONTROLLER: nodedrain-controller
  IMG_NAME_EXAM_PLUGIN: nodedrain-example-plugin

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main' || github.ref_type == 'tag'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        id: build_image
        run: |
          export IMG_TAG=ci-${{ github.ref_name }}
          if [[ "${{ github.ref_type }}" == "branch" && "${{ github.ref_name }}" == "main" ]]; then
            export IMG_TAG=latest
          elif [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            export IMG_TAG=$(echo -n "${{ github.ref_name }}" | sed 's/^v//g')
          fi
          echo "IMG_TAG=${IMG_TAG}" >> $GITHUB_OUTPUT
          make docker-build

      - name: Push image
        if: github.ref == 'refs/heads/main' || github.ref_type == 'tag'
        env:
          IMG_TAG: ${{ steps.build_image.outputs.IMG_TAG }}
        run: |
          if [[ "${{ github.ref_type }}" == "branch" && "${{ github.ref_name }}" != "main" ]] || [[ "${{ github.ref_type }}" == "tag" && ! "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Only push main branch and versioned tags"
            exit 1
          fi
          make docker-push
