inputs:
  docker_cache_enabled:
    required: true
    default: false

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        echo "PROTECTED_RUN=false" >> $GITHUB_ENV
        echo "IMG_REGISTRY=ghcr.io/slyngdk/" >> $GITHUB_ENV
        echo "IMG_NAME_CONTROLLER=nodedrain-controller" >> $GITHUB_ENV
        echo "IMG_NAME_EXAM_PLUGIN=nodedrain-example-plugin" >> $GITHUB_ENV
        echo "BRANCH_NAME=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
        echo "BRANCH_NAME_HASH=$(echo -n ${{ github.head_ref || github.ref_name }} | md5sum | cut -d" " -f1 -z)" >> $GITHUB_ENV

    - shell: bash
      if: (github.ref == 'refs/heads/main' || (github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v'))) && !env.ACT
      run: |
        echo "PROTECTED_RUN=true" >> $GITHUB_ENV

    - shell: bash
      if: inputs.docker_cache_enabled == 'true'
      run: |
        echo "DOCKER_BUILD_OPTIONS_CONTROLLER=--cache-to type=gha,mode=max,scope=controller-${{ env.BRANCH_NAME_HASH }} --cache-from type=gha,scope=controller-${{ env.BRANCH_NAME_HASH }} --cache-from type=gha,scope=controller-main" >> $GITHUB_ENV
        echo "DOCKER_BUILD_OPTIONS_EXAM_PLUGIN=--cache-to type=gha,mode=max,scope=example-plugin-${{ env.BRANCH_NAME_HASH }} --cache-from type=gha,scope=example-plugin-${{ env.BRANCH_NAME_HASH }} --cache-from type=gha,scope=example-plugin-main" >> $GITHUB_ENV

    - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      if: inputs.docker_cache_enabled == 'true'
      id: setup-buildx

    - name: Calculate Docker image context hash
      id: context-hash
      uses: 5monkeys/docker-image-context-hash-action@cb907ab60f4f41260cc1607af1d2e76c5d2306db # v2.0.0
      if: inputs.docker_cache_enabled == 'true'
      with:
        extra_tree_objects: |
          .dockerignore
          Dockerfile

    - name: Go Build Cache for Docker
      uses: actions/cache@v0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      if: inputs.docker_cache_enabled == 'true'
      id: cache
      with:
        path: go-build-cache
        key: ${{ runner.os }}-go-build-cache-${{ env.BRANCH_NAME_HASH }}-${{ steps.context-hash.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-go-build-cache-${{ env.BRANCH_NAME_HASH }}-
          ${{ runner.os }}-go-build-cache-main-

    - name: Restore Docker cache mounts
      uses: reproducible-containers/buildkit-cache-dance@5b81f4d29dc8397a7d341dba3aeecc7ec54d6361 #v3.3.0
      if: inputs.docker_cache_enabled == 'true'
      with:
        builder: ${{ steps.setup-buildx.outputs.name }}
        cache-dir: go-build-cache
        dockerfile: Dockerfile
        skip-extraction: ${{ steps.cache.outputs.cache-hit }}

    - name: Expose GitHub Runtime
      uses: crazy-max/ghaction-github-runtime@3cb05d89e1f492524af3d41a1c98c83bc3025124 # v3.1.0
      if: inputs.docker_cache_enabled == 'true' && !env.ACT
