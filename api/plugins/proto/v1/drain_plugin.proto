edition = "2023";
package api.plugins.proto.v1;

import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "api/plugins/proto/v1";

enum ConfigFormat {
  CONFIG_FORMAT_UNSPECIFIED = 0;
  CONFIG_FORMAT_YAML = 1;
  CONFIG_FORMAT_JSON = 2;
}

message PluginInfoRequest {}

message PluginInfoResponse {
  string id = 1;
  ConfigFormat config_format = 2;
}

message InitRequest {
  bytes config = 1;
}

message InitResponse {}

message IsSupportedResponse {
  bool supported = 1;
}

message IsHealthyRequest {}
message IsHealthyResponse {
  bool healthy = 1;
}

message IsSupportedRequest {}

message IsDrainOkResponse {
  bool ok = 1;
}

message IsDrainOkRequest {
  string node_name = 1;
}

message PreDrainRequest {
  string node_name = 1;
}
message PreDrainResponse {}

message PostDrainRequest {
  string node_name = 1;
}
message PostDrainResponse {}

service DrainService {
  rpc PluginInfo(PluginInfoRequest) returns (PluginInfoResponse);
  rpc Init(InitRequest) returns (InitResponse);
  rpc IsSupported(IsSupportedRequest) returns (IsSupportedResponse);
  rpc IsHealthy(IsHealthyRequest) returns (IsHealthyResponse);
  rpc IsDrainOk(IsDrainOkRequest) returns (IsDrainOkResponse);
  rpc PreDrain(PreDrainRequest) returns (PreDrainResponse);
  rpc PostDrain(PostDrainRequest) returns (PostDrainResponse);
}
